on:
  push:
    branches:
      - main

name: Production CI/CD

# jobs:
#   check:
#     name: Check
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions-rs/toolchain@v1
#         with:
#           profile: minimal
#           toolchain: stable
#           override: true
#       - uses: actions-rs/cargo@v1
#         with:
#           command: check

#   fmt:
#     name: Rustfmt
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions-rs/toolchain@v1
#         with:
#           profile: minimal
#           toolchain: stable
#           override: true
#       - run: rustup component add rustfmt
#       - uses: actions-rs/cargo@v1
#         with:
#           command: fmt
#           args: --all -- --check
#   build:
#     name: Build Image
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write
#       contents: read
#     needs: [check, fmt]
#     steps:
#     - name: Check out code
#       uses: actions/checkout@v2
    
#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@master
#       with:
#         aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
#         aws-region: us-east-2

#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1

#     - name: Build, tag, and push image to Amazon ECR
#       env:
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         ECR_REPOSITORY: discord-bot
#         IMAGE_TAG: release
#       run: |
#         docker build . -f configs/docker/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Run playbook
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Deploy container
        uses: dawidd6/action-ansible-playbook@v2
        env:
          AWS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PASS: ${{ secrets.SSH_PASS }}
        with:
          playbook: deploy.yml
          directory: configs/deploy
          key: ${{secrets.SSH_PRIVATE_KEY}}
          inventory: |
            [all:vars]
            ansible_connection=ssh
            remote_user: "{{ lookup('env', 'SSH_USER') }}"
            ansible_ssh_pass: "{{ lookup('env', 'SSH_PASS') }}"
